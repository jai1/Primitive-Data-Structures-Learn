<?xml version="1.0" encoding="UTF-8"?><testrun name="StringFunctionsTest" project="JavaImplementation" tests="9" started="9" failures="0" errors="1" ignored="0">
  <testsuite name="org.learn.interview.StringFunctionsTest" time="0.024">
    <testcase name="reverseSentenceTest" classname="org.learn.interview.StringFunctionsTest" time="0.001"/>
    <testcase name="getMinTimeDifferenceTest" classname="org.learn.interview.StringFunctionsTest" time="0.022">
      <error>java.lang.IndexOutOfBoundsException: Index: 6, Size: 6&#13;
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)&#13;
	at java.util.ArrayList.get(ArrayList.java:429)&#13;
	at org.learn.interview.StringFunctions.getMinTimeDifference(StringFunctions.java:299)&#13;
	at org.learn.interview.StringFunctionsTest.getMinTimeDifferenceTest(StringFunctionsTest.java:105)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:497)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="convertToFloatTest" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
    <testcase name="boardContainsWordTest" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
    <testcase name="reverseOrAddTest" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
    <testcase name="reverseStringTest" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
    <testcase name="recursiveCompressStringTest" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
    <testcase name="canConvertToPalindrome" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
    <testcase name="compressStringTest" classname="org.learn.interview.StringFunctionsTest" time="0.0"/>
  </testsuite>
</testrun>
